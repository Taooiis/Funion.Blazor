// <auto-generated />
using System;
using FunionBlazor.EntityFramework.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FunionBlazor.Database.Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20230529084310_v1.0.0")]
    partial class v100
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FunionBlazor.Core.Entitys.OUnbalancedLoading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AfterFrame")
                        .HasColumnType("longtext");

                    b.Property<string>("BeforeAfterPartial")
                        .HasColumnType("longtext");

                    b.Property<string>("CargoName")
                        .HasColumnType("longtext");

                    b.Property<string>("CenterGravityPartial")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateDatestr")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Direction")
                        .HasColumnType("longtext");

                    b.Property<string>("GDHStation")
                        .HasColumnType("longtext");

                    b.Property<string>("IndicatedDeight")
                        .HasColumnType("longtext");

                    b.Property<string>("MotorcycleType")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfitLoss")
                        .HasColumnType("longtext");

                    b.Property<string>("RoughWeight")
                        .HasColumnType("longtext");

                    b.Property<string>("SendCollect")
                        .HasColumnType("longtext");

                    b.Property<string>("SendSend")
                        .HasColumnType("longtext");

                    b.Property<string>("SideArm")
                        .HasColumnType("longtext");

                    b.Property<string>("Speed")
                        .HasColumnType("longtext");

                    b.Property<string>("Suttle")
                        .HasColumnType("longtext");

                    b.Property<string>("Tare")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TrackScaleid")
                        .HasColumnType("char(36)");

                    b.Property<string>("TransceiverCollect")
                        .HasColumnType("longtext");

                    b.Property<string>("TransceiverSend")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WagonNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TrackScaleid")
                        .IsUnique();

                    b.ToTable("OUnbalancedLoading");
                });

            modelBuilder.Entity("FunionBlazor.Core.Entitys.SysSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AttributeName")
                        .HasColumnType("longtext");

                    b.Property<int>("CPZOrder")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GDHOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("SysSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributeName = "GDHStation",
                            CPZOrder = 2,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 2,
                            Name = "轨道衡测点"
                        },
                        new
                        {
                            Id = 2,
                            AttributeName = "WagonNumber",
                            CPZOrder = 3,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 3,
                            Name = "车号"
                        },
                        new
                        {
                            Id = 3,
                            AttributeName = "MotorcycleType",
                            CPZOrder = 4,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 4,
                            Name = "车型"
                        },
                        new
                        {
                            Id = 4,
                            AttributeName = "RoughWeight",
                            CPZOrder = 5,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 5,
                            Name = "毛重"
                        },
                        new
                        {
                            Id = 5,
                            AttributeName = "Tare",
                            CPZOrder = 6,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 6,
                            Name = "皮重"
                        },
                        new
                        {
                            Id = 6,
                            AttributeName = "Suttle",
                            CPZOrder = 7,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 7,
                            Name = "净重"
                        },
                        new
                        {
                            Id = 7,
                            AttributeName = "IndicatedDeight",
                            CPZOrder = 8,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 8,
                            Name = "标重"
                        },
                        new
                        {
                            Id = 8,
                            AttributeName = "ProfitLoss",
                            CPZOrder = 9,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 9,
                            Name = "盈亏"
                        },
                        new
                        {
                            Id = 9,
                            AttributeName = "SuperTons",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "超吨"
                        },
                        new
                        {
                            Id = 10,
                            AttributeName = "Speed",
                            CPZOrder = 10,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 10,
                            Name = "速度"
                        },
                        new
                        {
                            Id = 11,
                            AttributeName = "CargoName",
                            CPZOrder = 11,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 11,
                            Name = "货名"
                        },
                        new
                        {
                            Id = 12,
                            AttributeName = "TransceiverSend",
                            CPZOrder = 12,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 12,
                            Name = "发货单位"
                        },
                        new
                        {
                            Id = 13,
                            AttributeName = "TransceiverCollect",
                            CPZOrder = 13,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 13,
                            Name = "收货单位"
                        },
                        new
                        {
                            Id = 14,
                            AttributeName = "SendSend",
                            CPZOrder = 14,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 14,
                            Name = "发站"
                        },
                        new
                        {
                            Id = 15,
                            AttributeName = "SendCollect",
                            CPZOrder = 15,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 15,
                            Name = "到站"
                        },
                        new
                        {
                            Id = 16,
                            AttributeName = "ShipsName",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "船名"
                        },
                        new
                        {
                            Id = 17,
                            AttributeName = "LoadingName",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "装车点"
                        },
                        new
                        {
                            Id = 18,
                            AttributeName = "WeightOff",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "允增"
                        },
                        new
                        {
                            Id = 19,
                            AttributeName = "BeforeAfterPartial",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "前后偏"
                        },
                        new
                        {
                            Id = 20,
                            AttributeName = "AboutPartial",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "左右偏"
                        },
                        new
                        {
                            Id = 21,
                            AttributeName = "VehiclePartial",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "整车偏"
                        },
                        new
                        {
                            Id = 22,
                            AttributeName = "LeftOne",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "左一"
                        },
                        new
                        {
                            Id = 23,
                            AttributeName = "RightOne",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "右一"
                        },
                        new
                        {
                            Id = 24,
                            AttributeName = "LeftTwo",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "左二"
                        },
                        new
                        {
                            Id = 25,
                            AttributeName = "RightTwo",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "右二"
                        },
                        new
                        {
                            Id = 26,
                            AttributeName = "LeftThree",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "左三"
                        },
                        new
                        {
                            Id = 27,
                            AttributeName = "RightThree",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "右三"
                        },
                        new
                        {
                            Id = 28,
                            AttributeName = "LeftFour",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "左四"
                        },
                        new
                        {
                            Id = 29,
                            AttributeName = "RightFour",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "右四"
                        },
                        new
                        {
                            Id = 30,
                            AttributeName = "Direction",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "方向"
                        },
                        new
                        {
                            Id = 31,
                            AttributeName = "CenterGravityPartial",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "重心偏"
                        },
                        new
                        {
                            Id = 32,
                            AttributeName = "SideArm",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "前架"
                        },
                        new
                        {
                            Id = 33,
                            AttributeName = "VehiclePartial",
                            CPZOrder = 0,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 0,
                            Name = "整车偏"
                        },
                        new
                        {
                            Id = 34,
                            AttributeName = "StarCreateDatestr",
                            CPZOrder = 16,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 16,
                            Name = "发站时间"
                        },
                        new
                        {
                            Id = 35,
                            AttributeName = "CreateDatestr",
                            CPZOrder = 1,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 1,
                            Name = "时间"
                        },
                        new
                        {
                            Id = 36,
                            AttributeName = "Remark",
                            CPZOrder = 17,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GDHOrder = 17,
                            Name = "备注"
                        });
                });

            modelBuilder.Entity("FunionBlazor.Core.Entitys.TrackScale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AboutPartial")
                        .HasColumnType("longtext");

                    b.Property<string>("BeforeAfterPartial")
                        .HasColumnType("longtext");

                    b.Property<string>("CargoName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateDatestr")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Direction")
                        .HasColumnType("longtext");

                    b.Property<string>("GdhStation")
                        .HasColumnType("longtext");

                    b.Property<string>("IndicatedDeight")
                        .HasColumnType("longtext");

                    b.Property<string>("LeftFour")
                        .HasColumnType("longtext");

                    b.Property<string>("LeftOne")
                        .HasColumnType("longtext");

                    b.Property<string>("LeftThree")
                        .HasColumnType("longtext");

                    b.Property<string>("LeftTwo")
                        .HasColumnType("longtext");

                    b.Property<string>("LoadingName")
                        .HasColumnType("longtext");

                    b.Property<string>("MotorcycleType")
                        .HasColumnType("longtext");

                    b.Property<string>("OverT")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfitLoss")
                        .HasColumnType("longtext");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext");

                    b.Property<string>("RightFour")
                        .HasColumnType("longtext");

                    b.Property<string>("RightOne")
                        .HasColumnType("longtext");

                    b.Property<string>("RightThree")
                        .HasColumnType("longtext");

                    b.Property<string>("RightTwo")
                        .HasColumnType("longtext");

                    b.Property<string>("RoughWeight")
                        .HasColumnType("longtext");

                    b.Property<string>("SendCollect")
                        .HasColumnType("longtext");

                    b.Property<string>("SendSend")
                        .HasColumnType("longtext");

                    b.Property<string>("SendState")
                        .HasColumnType("longtext");

                    b.Property<string>("Sequence")
                        .HasColumnType("longtext");

                    b.Property<string>("ShipsName")
                        .HasColumnType("longtext");

                    b.Property<string>("Speed")
                        .HasColumnType("longtext");

                    b.Property<string>("StarCreateDatestr")
                        .HasColumnType("longtext");

                    b.Property<int>("Sum")
                        .HasColumnType("int");

                    b.Property<string>("SuperTons")
                        .HasColumnType("longtext");

                    b.Property<string>("Suttle")
                        .HasColumnType("longtext");

                    b.Property<string>("Tare")
                        .HasColumnType("longtext");

                    b.Property<string>("TransceiverCollect")
                        .HasColumnType("longtext");

                    b.Property<string>("TransceiverSend")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VehiclePartial")
                        .HasColumnType("longtext");

                    b.Property<string>("WagonNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("WeightOff")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TrackScale");
                });

            modelBuilder.Entity("FunionBlazor.Core.Entitys.OUnbalancedLoading", b =>
                {
                    b.HasOne("FunionBlazor.Core.Entitys.TrackScale", "trackScale")
                        .WithOne("OUlanced")
                        .HasForeignKey("FunionBlazor.Core.Entitys.OUnbalancedLoading", "TrackScaleid");

                    b.Navigation("trackScale");
                });

            modelBuilder.Entity("FunionBlazor.Core.Entitys.TrackScale", b =>
                {
                    b.Navigation("OUlanced");
                });
#pragma warning restore 612, 618
        }
    }
}
